{"ast":null,"code":"var _jsxFileName = \"/Users/sophiekeller/Desktop/Github/EWHWebsite/frontend/src/screens/Team.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport images from \"../assets/images/images.js\";\nimport data from \"../assets/data.json\"; //COMPONENTS\n\nimport Header from \"../components/Header\";\nimport PersonBlock from \"../components/PersonBlock\";\nimport FilterButton from \"../components/FilterButton\";\nexport default class Team extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"data\", data);\n    this.state = {\n      leads: data.leads,\n      selected: data.members,\n      filter: \"All\",\n      all_filters: [\"All\", \"Business\", \"Design\", \"Software\", \"Electrical\", \"Integrative Design\", \"Research\"]\n    };\n  }\n\n  async componentDidMount() {\n    const results = (await axios.get('http://localhost:8081/leads')).data;\n    this.setState({\n      leads: results\n    });\n  }\n\n  updateFilter(f) {\n    if (f == \"All\") {\n      this.setState({\n        selected: data.members\n      });\n    } else if (f == \"Business\") {\n      this.setState({\n        selected: data.teams.business\n      });\n    }\n  }\n\n  render() {\n    console.log(\"filter\", this.state.filter);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      photo: images.group,\n      title: \"Our Team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sections-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leads-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Leads\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lead-blocks-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, this.state.leads.map((person, index) => {\n      if (person != null) {\n        return /*#__PURE__*/React.createElement(PersonBlock, {\n          data: person,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }\n        });\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Team\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-filters-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, this.state.all_filters.map((filter, index) => {\n      if (filter != null) {\n        return /*#__PURE__*/React.createElement(FilterButton, {\n          title: filter,\n          selected: this.state.filter === filter,\n          updateFilter: () => {\n            this.updateFilter(filter);\n            console.log(\"filter is \", filter);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }\n        });\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-blocks-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, this.state.selected.map((person, index) => {\n      if (person != null) {\n        return /*#__PURE__*/React.createElement(PersonBlock, {\n          data: person,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }\n        });\n      }\n    })))));\n  }\n\n}\nlet nadine = {\n  name: 'Nadine Farhat',\n  title: 'President',\n  year: 'Sophomore',\n  major: 'Computer Science',\n  projects: 'Menstrual Game, INDAGO',\n  image: images.nadine\n};","map":{"version":3,"sources":["/Users/sophiekeller/Desktop/Github/EWHWebsite/frontend/src/screens/Team.js"],"names":["React","axios","images","data","Header","PersonBlock","FilterButton","Team","Component","constructor","props","console","log","state","leads","selected","members","filter","all_filters","componentDidMount","results","get","setState","updateFilter","f","teams","business","render","group","map","person","index","nadine","name","title","year","major","projects","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport images from \"../assets/images/images.js\"\nimport data from \"../assets/data.json\"\n\n//COMPONENTS\nimport Header from \"../components/Header\";\nimport PersonBlock from \"../components/PersonBlock\";\nimport FilterButton from \"../components/FilterButton\";\n\nexport default class Team extends React.Component {\n    constructor(props) {\n      super(props);\n      console.log(\"data\", data)\n      this.state = {\n        leads: data.leads,\n        selected: data.members,\n        filter: \"All\",\n        all_filters: [\"All\", \"Business\", \"Design\", \"Software\", \"Electrical\", \"Integrative Design\", \"Research\"]\n      };\n    }\n\n  async componentDidMount(){\n    const results = (await axios.get('http://localhost:8081/leads')).data;\n    this.setState({leads: results})\n  }\n  updateFilter(f){\n      if (f == \"All\"){\n          this.setState({selected: data.members})\n      }else if (f == \"Business\"){\n          this.setState({selected: data.teams.business})\n      }\n  }\n  render() {\n    console.log(\"filter\", this.state.filter)\n    return (\n        <div className=\"home-container\">\n          <Header photo={images.group} title = \"Our Team\"/>\n          <div className=\"sections-container\">\n              <div className = \"leads-container\">\n                <div className = \"team-title\">Leads</div>\n                <div className = \"lead-blocks-container\">\n                    {this.state.leads.map((person, index) => {\n                        if (person!= null){\n                            return (<PersonBlock data = {person} /> )}})}\n                </div>\n              </div>\n              <div className = \"team-container\">\n                <div className = \"team-title\">Team</div>\n                <div className = \"team-filters-container\">\n                    {this.state.all_filters.map((filter, index) => {\n                        if (filter!= null){\n                            return (<FilterButton title = {filter} selected = {this.state.filter === filter} updateFilter = {() => {this.updateFilter(filter);console.log(\"filter is \",filter)}}/> )}})}\n                </div>\n                <div className = \"team-blocks-container\">\n                    {this.state.selected.map((person, index) => {\n                        if (person!= null){\n                            return (<PersonBlock data = {person} /> )}})}\n                </div>\n              </div>\n          </div>\n        </div>\n    );\n  }\n}\nlet nadine = {name: 'Nadine Farhat', title: 'President', year: 'Sophomore', major: 'Computer Science', projects: 'Menstrual Game, INDAGO', image: images.nadine}\n"]},"metadata":{},"sourceType":"module"}